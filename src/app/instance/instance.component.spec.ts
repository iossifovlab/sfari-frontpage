import { ComponentFixture, TestBed } from '@angular/core/testing';
import { InstanceComponent } from './instance.component';
import { HttpClientTestingModule } from '@angular/common/http/testing';

describe('InstanceComponent', () => {
  let component: InstanceComponent;
  let fixture: ComponentFixture<InstanceComponent>;

  beforeEach(async () => {
    await TestBed.configureTestingModule({
      declarations: [ InstanceComponent ],
      imports: [HttpClientTestingModule]
    })
    .compileComponents();

    fixture = TestBed.createComponent(InstanceComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });

  it('should get first parapraph of description when title and description are separated by new line', () => {
    const desc = '## SSC CSHL WGS\n' +
    '*De novo* and transmitted substitutions and indel calls generated by the' +
    'Iossifov lab from the whole-genome sequencing from 2,379 SSC families.' +
    'NYGC generated the whole-genome data from DNA extracted from whole blood.' +
    '\n\n' +
    '### Disclaimer' +
    '\n\n' +
    'The use of the Simons Simplex and Simons Searchlight Collections is limited to' +
    'projects that advance the study of autism and related developmental disorders.' +
    'Questions on consents for the Simons Simplex Collection and the Simons' +
    'Searchlight should be directed to collections@sfari.org.';

    const result = component.getFirstParagraph(desc);
    expect(result).toBe('*De novo* and transmitted substitutions and indel calls generated by the' +
    'Iossifov lab from the whole-genome sequencing from 2,379 SSC families.' +
    'NYGC generated the whole-genome data from DNA extracted from whole blood.');
  });

  it('should get first parapraph of description when title and description are separated by empty line', () => {
    const desc = '## SSC CSHL WGS\n\n' +
    '*De novo* and transmitted substitutions and indel calls generated by the' +
    'Iossifov lab from the whole-genome sequencing from 2,379 SSC families.' +
    'NYGC generated the whole-genome data from DNA extracted from whole blood.' +
    '\n\n' +
    '### Disclaimer' +
    '\n\n' +
    'The use of the Simons Simplex and Simons Searchlight Collections is limited to' +
    'projects that advance the study of autism and related developmental disorders.' +
    'Questions on consents for the Simons Simplex Collection and the Simons' +
    'Searchlight should be directed to collections@sfari.org.';

    const result = component.getFirstParagraph(desc);
    expect(result).toBe('*De novo* and transmitted substitutions and indel calls generated by the' +
    'Iossifov lab from the whole-genome sequencing from 2,379 SSC families.' +
    'NYGC generated the whole-genome data from DNA extracted from whole blood.');
  });

  it('should get first parapraph of description when there is no title', () => {
    const desc =
    '*De novo* and transmitted substitutions and indel calls generated by the' +
    'Iossifov lab from the whole-genome sequencing from 2,379 SSC families.' +
    'NYGC generated the whole-genome data from DNA extracted from whole blood.' +
    '\n\n' +
    '### Disclaimer' +
    '\n\n' +
    'The use of the Simons Simplex and Simons Searchlight Collections is limited to' +
    'projects that advance the study of autism and related developmental disorders.' +
    'Questions on consents for the Simons Simplex Collection and the Simons' +
    'Searchlight should be directed to collections@sfari.org.';

    const result = component.getFirstParagraph(desc);
    expect(result).toBe('*De novo* and transmitted substitutions and indel calls generated by the' +
    'Iossifov lab from the whole-genome sequencing from 2,379 SSC families.' +
    'NYGC generated the whole-genome data from DNA extracted from whole blood.');
  });
});
